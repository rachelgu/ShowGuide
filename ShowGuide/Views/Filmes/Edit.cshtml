@model ShowGuide.Models.Filme

@{
    ViewBag.Title = "Editar " + Html.DisplayFor(model => model.Titulo);
}

<h2>
    Editar @ViewBag.Title</h2>
<hr />


@using (Html.BeginForm("Edit", "Filmes", FormMethod.Post, new { enctype = "multipart/form-data", @class="m-auto" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
 @Html.ValidationSummary(true, "", new { @class = "text-danger" })
 @Html.HiddenFor(model => model.Id)
 @Html.HiddenFor(model => model.ImageExtension)

 <div class="form-group row">
     @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-3" })
     <div class="col-md-9">
         @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control col-12" } })
         @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
     </div>
 </div>

 <div class="form-group row">
     @Html.LabelFor(model => model.ImageExtension, htmlAttributes: new { @class = "control-label col-md-3" })
     <div class="col-md-9">
         <input type="file" name="Image" />
     </div>
 </div>

 <div class="form-group row">
     @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-3" })
     <div class="col-md-9">
         @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control col-12" } })
         @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
     </div>
 </div>

 <div class="form-group row">
     @Html.LabelFor(model => model.DataLancamento, htmlAttributes: new { @class = "control-label col-md-3" })
     <div class="col-md-9">
         @Html.EditorFor(model => model.DataLancamento, new { htmlAttributes = new { @class = "form-control col-12" } })
         @Html.ValidationMessageFor(model => model.DataLancamento, "", new { @class = "text-danger" })
     </div>
 </div>

 <div class="form-group row">
     @Html.LabelFor(model => model.Elenco, htmlAttributes: new { @class = "control-label col-md-3" })
     <div class="col-md-9">
         @Html.EditorFor(model => model.Elenco, new { htmlAttributes = new { @class = "form-control col-12" } })
         @Html.ValidationMessageFor(model => model.Elenco, "", new { @class = "text-danger" })
     </div>
 </div>

 <div class="form-group row">
     @Html.LabelFor(model => model.TraillerLink, htmlAttributes: new { @class = "control-label col-md-3" })
     <div class="col-md-9">
         @Html.EditorFor(model => model.TraillerLink, new { htmlAttributes = new { @class = "form-control col-12" } })
         @Html.ValidationMessageFor(model => model.TraillerLink, "", new { @class = "text-danger" })
     </div>
 </div>

@*Lista de categorias dos Filmes*@
    <div class="form-group row">
        <label class="control-label col-md-3"> Categorias do Filme:</label>
        <div class="col-md-9">
            @Html.DropDownList("Categorias", null, htmlAttributes: new { @class = "form-control col-12", Multiple = "multiple" })
            @Html.ValidationMessageFor(model => model.Categorias, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group row">
        <input type="submit" value="Guardar" class="btn btn-primary mr-2" />
        @Html.ActionLink("Voltar", "Details", "Filmes", new { id = Model.Id }, new { @class = "btn btn-secondary" })
    </div>
    </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
        $("#Categorias").val(@(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(((List<int>)ViewBag.sel_Categorias))))).trigger('chosen:updated');
        </script>
    }
